//****************************************************************************
//
//
//
//****************************************************************************



#ifndef __AGENT_H__
#define __AGENT_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>



// ===========================================================================
//                                Project Files
// ===========================================================================
#include "Boids.h"



// ===========================================================================
//                              Class declarations
// ===========================================================================






class Agent
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    Agent(void);

    // =======================================================================
    //                                Destructor
    // =======================================================================
    virtual ~Agent(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
     inline  unsigned int Get_x(void) const;
     inline  unsigned int Get_y(void) const;
    // =======================================================================
    //                            Accessors: setters
    // =======================================================================
     inline  void Set_x( unsigned int newx);
     inline  void Set_y( unsigned int newy);
    // =======================================================================
    //                                Operators
    // =======================================================================

    // =======================================================================
    //                              Public Methods
    // =======================================================================

    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*Agent(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/
    /*Agent(const Agent &model)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
       //number of agent between agent i and r
       const unsigned int K;
       // number of agent that their distance with j is less than c
       const unsigned int k;
       //number of objects that their distance with i is less than c
       const unsigned int O;

       unsigned int x;
       unsigned int y;
      
      




};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================
   inline  unsigned int Agent::Get_x(void) const
   {
    return x;
   }
   inline  unsigned int Agent::Get_y(void) const
   {
    return y;
   }
// ===========================================================================
//                              Setters' definitions
// ===========================================================================
   inline  void Agent::Set_x(unsigned int newx) 
   {
      x=newx;
   }
   inline  void Agent::Set_y(unsigned int newy) 
   {
      x=newy;
   }
// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================


#endif // __AGENT_H__

